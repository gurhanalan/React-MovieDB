{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["API_ENDPOINT","process","useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","totalResults","setTotalResults","fetchMovies","url","a","fetch","response","json","data2","Response","Search","Error","console","log","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","page","setPage","movies","Provider","value","useGlobalContext","useContext","SearchForm","totalButtons","Math","ceil","buttons","Array","from","length","className","onSubmit","e","preventDefault","type","onChange","target","onClick","old","map","_","index","key","Movies","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","src","alt","Home","SingleMovie","useParams","plot","Plot","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19aee299.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_MOVIE_API_KEY}`;\r\n\r\nconst useFetch = (urlParams) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState({ show: false, msg: \"\" });\r\n    const [data, setData] = useState([]);\r\n    const [totalResults, setTotalResults] = useState(null);\r\n\r\n    const fetchMovies = async (url) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(url);\r\n            const data2 = await response.json();\r\n            if (data2.Response === \"True\") {\r\n                setData(data2.Search || data2);\r\n                setError({ show: false, msg: \"\" });\r\n                if (data2.totalResults) setTotalResults(data2.totalResults);\r\n            } else {\r\n                setError({ show: true, msg: data2.Error });\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchMovies(`${API_ENDPOINT}${urlParams}`);\r\n    }, [urlParams]);\r\n    return { isLoading, error, data, totalResults };\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useState, useContext } from \"react\";\nimport useFetch from \"./useFetch\";\n// make sure to use https\n// console.log(API_ENDPOINT);\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n    const [query, setQuery] = useState(\"batman\");\n    const [page, setPage] = useState(1);\n\n    const {\n        isLoading,\n        error,\n        data: movies,\n        totalResults,\n    } = useFetch(`&s=${query}&page=${page}`);\n\n    return (\n        <AppContext.Provider\n            value={{\n                isLoading,\n                error,\n                movies,\n                query,\n                setQuery,\n                totalResults,\n                setPage,\n                page,\n            }}\n        >\n            {children}\n        </AppContext.Provider>\n    );\n};\n// make sure use\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nconst SearchForm = () => {\n    const { query, setQuery, error, totalResults, setPage, page } =\n        useGlobalContext();\n    const totalButtons = Math.ceil(totalResults / 10);\n    const buttons = Array.from({ length: totalButtons });\n    return (\n        <form\n            className=\"search-form\"\n            onSubmit={(e) => {\n                e.preventDefault();\n            }}\n        >\n            <h2>search movies</h2>\n            <input\n                type=\"text\"\n                className=\"form-input\"\n                value={query}\n                onChange={(e) => {\n                    setQuery(e.target.value);\n                    setPage(1);\n                }}\n            />\n            {error.show && (\n                <div className=\"error\">\n                    {error.msg === \"Incorrect IMDb ID.\"\n                        ? \"Please enter a movie name\"\n                        : error.msg}\n                </div>\n            )}\n            {!error.show && (\n                <>\n                    <div className=\"movies-result\">{`Total ${totalResults} Results `}</div>\n                    <div className=\"btn-container\">\n                        <button\n                            className=\"prev-btn\"\n                            onClick={() => {\n                                if (page > 2) setPage((old) => old - 1);\n                            }}\n                        >\n                            prev\n                        </button>\n                        {buttons.map((_, index) => (\n                            <button\n                                key={index}\n                                className={`page-btn ${\n                                    index + 1 === page ? \"active-btn\" : null\n                                }`}\n                                onClick={() => {\n                                    setPage(index + 1);\n                                }}\n                            >\n                                {\" \"}\n                                {index + 1}\n                            </button>\n                        ))}\n                        <button\n                            className=\"next-btn\"\n                            onClick={() => {\n                                if (page < totalButtons)\n                                    setPage((old) => old + 1);\n                            }}\n                        >\n                            next\n                        </button>\n                    </div>\n                </>\n            )}\n        </form>\n    );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { Link } from \"react-router-dom\";\nexport const url =\n    \"https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png\";\n\nconst Movies = () => {\n    const { movies, isLoading } = useGlobalContext();\n\n    if (isLoading) {\n        return <div className=\"loading\"></div>;\n    }\n\n    return (\n        <section className=\"movies\">\n            {movies.map((movie) => {\n                const {\n                    imdbID: id,\n                    Poster: poster,\n                    Title: title,\n                    Year: year,\n                } = movie;\n                return (\n                    <Link to={`/movies/${id}`} key={id} className=\"movie\">\n                        <article>\n                            <img\n                                src={poster === \"N/A\" ? url : poster}\n                                alt={title}\n                            />\n                            <div className=\"movie-info\">\n                                <h4 className=\"title\">{title}</h4>\n                                <p>{year}</p>\n                            </div>\n                        </article>\n                    </Link>\n                );\n            })}\n        </section>\n    );\n};\n\nexport default Movies;\n","import React from \"react\";\nimport Form from \"./SearchForm\";\nimport Movies from \"./Movies\";\nconst Home = () => {\n    return (\n        <main>\n            <Form />\n            <Movies />\n        </main>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nimport { url } from \"./Movies\";\nconst SingleMovie = () => {\n    const { id } = useParams();\n    const { isLoading, error, data: movie } = useFetch(`&i=${id}`);\n\n    if (isLoading) {\n        return <div className=\"loading\"></div>;\n    }\n\n    if (error.show) {\n        return (\n            <div className=\"page-error\">\n                <h1>{error.msg}</h1>\n                <Link to=\"/\" className=\"btn\">\n                    back to movies\n                </Link>\n            </div>\n        );\n    }\n\n    const { Poster: poster, Title: title, Plot: plot, Year: year } = movie;\n    return (\n        <section className=\"single-movie\">\n            <img src={poster === \"N/A\" ? url : poster} alt={title} />\n            <div className=\"single-movie-info\">\n                <h2>{title}</h2>\n                <p>{plot}</p>\n                <h4>{year}</h4>\n                <Link to=\"/\" className=\"btn\">\n                    back to movies\n                </Link>\n            </div>\n        </section>\n    );\n};\n\nexport default SingleMovie;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Movie from \"./SingleMovie\";\n\nfunction App() {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/movies/:id\" element={<Movie />} />\n        </Routes>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n    <React.StrictMode>\n        <AppProvider>\n            <Router>\n                <App />\n            </Router>\n        </AppProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}